{"version":3,"sources":["components/Reminder.js","components/Reminders.js","components/Form.js","components/App.js","index.js"],"names":["Reminder","props","topic","time","onClick","deleteReminder","id","Reminders","reminders","map","reminder","Form","onSubmit","addReminder","value","state","newReminder","onChange","e","handleReminderChange","newTime","handleTimeChange","type","App","console","log","getAll","axios","get","then","response","data","event","preventDefault","mounted","reminderObject","some","tempReminder","alert","post","setState","concat","window","confirm","delete","filter","catch","error","target","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c480cbe2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Reminder = (props) => {\r\n    return (\r\n      <li>\r\n        {props.topic} at {(props.time)} {\" \"}\r\n        <button onClick={() => props.deleteReminder(props.id)}>Delete</button>\r\n      </li>\r\n    )\r\n}\r\n\r\nexport default Reminder;","import React from 'react';\r\nimport Reminder from './Reminder';\r\n\r\nconst Reminders = (props) => {\r\n    return (\r\n        <ul>\r\n         {props.reminders.map(reminder => <Reminder key={reminder.id} id={reminder.id} deleteReminder={props.deleteReminder} topic={reminder.topic} time={reminder.time}/>)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Reminders;","import React from 'react';\r\n\r\nconst Form = (props) => {\r\n    return (\r\n        <form onSubmit={props.addReminder}>\r\n            <div>\r\n                Topic: <input value={props.state.newReminder} onChange={(e) => props.handleReminderChange(e)}/>\r\n            </div>\r\n            <div>\r\n                Time: <input value={props.state.newTime} onChange={(e) => props.handleTimeChange(e)}/>\r\n            </div>\r\n            <div>\r\n            <button type=\"submit\">Add</button>\r\n          </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form","import React from 'react'\r\nimport Reminders from './Reminders'\r\nimport Form from './Form'\r\nimport axios from 'axios'\r\n\r\nconst baseUrl = '/api/reminders'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    console.log(\"constructed\")\r\n    super(props)\r\n    this.state = {\r\n      reminders: [],\r\n      newReminder: '',\r\n      newTime: ''\r\n    }\r\n  }\r\n\r\n  getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n  addReminder = (event) => {\r\n    event.preventDefault()\r\n    let mounted = true;\r\n    const reminderObject = {\r\n      topic: this.state.newReminder,\r\n      time: this.state.newTime,\r\n    }\r\n\r\n    if (!this.state.reminders.some(tempReminder => tempReminder.topic === reminderObject.topic)) {\r\n      axios.post('http://localhost:3001/api/reminders', reminderObject)\r\n        .then(response => {\r\n          if(mounted) {\r\n            console.log(response)\r\n            this.setState({\r\n              reminders: this.state.reminders.concat(response.data),\r\n              newReminder: '',\r\n              newTime: ''\r\n            })\r\n          }\r\n      })\r\n    } else {\r\n      alert(\"Failed to create reminder: reminder already exists\");\r\n    }\r\n    return () => mounted = false;\r\n  }\r\n\r\n  deleteReminder = (id) => {\r\n    if(window.confirm(\"Do you want to delete this reminder?\")){\r\n      axios.delete(`http://localhost:3001/api/reminders/${id}`)\r\n        .then(response => {\r\n          console.log(response)\r\n          console.log(response.data)\r\n          this.setState({\r\n            reminders: this.state.reminders.filter(reminder => reminder.id !== id)\r\n          })\r\n        })\r\n        .catch(error => {\r\n          console.log('fail')\r\n        })\r\n    }   \r\n  }\r\n\r\n  componentDidMount(){\r\n    console.log(\"mounted\")\r\n    axios.get('http://localhost:3001/api/reminders')\r\n      .then(response => {\r\n        console.log(response)\r\n        this.setState({\r\n          reminders: response.data,\r\n        })\r\n        console.log(\"promise resolved\")\r\n        })\r\n  }\r\n\r\n  handleReminderChange = (event) => {\r\n    console.log(event.target.value)\r\n    this.setState({newReminder: event.target.value})\r\n  }\r\n\r\n  handleTimeChange = (event) => {\r\n    console.log(event.target.value)\r\n    this.setState({newTime: event.target.value})\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    console.log(\"render\")\r\n    return (\r\n      <div>\r\n        <h2>Add a reminder</h2>\r\n        <Form state={this.state} addReminder={this.addReminder} handleReminderChange={this.handleReminderChange} handleTimeChange={this.handleTimeChange}/>\r\n        <h2>Reminders:</h2>\r\n        <Reminders reminders={this.state.reminders} deleteReminder={this.deleteReminder}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}